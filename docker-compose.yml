version: '3.8'

services:
  # Base de datos PostgreSQL
  postgres:
    image: postgres:15-alpine
    container_name: poliacredita-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: poliacredita_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d
    networks:
      - poliacredita-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d poliacredita_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Aplicación NestJS
  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: poliacredita-api
    restart: unless-stopped
    environment:
      NODE_ENV: production
      PORT: 3000
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASS: postgres
      DB_NAME: poliacredita_db
      # Variables adicionales para configuración
      JWT_SECRET: your-super-secret-jwt-key-change-in-production
      API_VERSION: v1
    ports:
      - "3000:3000"
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./logs:/app/logs
    networks:
      - poliacredita-network
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:3000/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # Adminer para gestión de base de datos (opcional)
  adminer:
    image: adminer:4.8.1
    container_name: poliacredita-adminer
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      ADMINER_DEFAULT_SERVER: postgres
      ADMINER_DESIGN: pappu687
    depends_on:
      - postgres
    networks:
      - poliacredita-network

volumes:
  postgres_data:
    driver: local
  logs:
    driver: local

networks:
  poliacredita-network:
    driver: bridge
    name: poliacredita-network

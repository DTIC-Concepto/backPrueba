name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  ci:
    name: Build, Test, and Analyze with SonarCloud
    runs-on: ubuntu-latest
    outputs:
      COMMIT: ${{ steps.set_commit.outputs.commit }}
    env:
      DB_HOST: ${{ secrets.DB_HOST }}
      DB_PORT: ${{ secrets.DB_PORT }}
      DB_USER: ${{ secrets.DB_USER }}
      DB_PASS: ${{ secrets.DB_PASS }}
      DB_NAME: ${{ secrets.DB_NAME }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install Dependencies
        run: npm ci

      - name: Wait for PostgreSQL
        run: |
          for i in {1..10}; do
            nc -z $DB_HOST $DB_PORT && echo "Postgres is up" && break
            echo "Waiting for postgres..."
            sleep 3
          done

      # 🧪 Ejecutar Unit Tests con cobertura y guardar logs
      - name: Run Unit Tests with Coverage and Save Logs
        run: |
          mkdir -p logs
          COMMIT=${GITHUB_SHA::7}
          echo "Commit: $COMMIT"
          echo "COMMIT=$COMMIT" >> $GITHUB_ENV

          npm run test:cov > logs/test_cov_${COMMIT}.log 2>&1
          npm run test > logs/test_${COMMIT}.log 2>&1

          # Extraer solo errores unitarios (opcional)
          grep -A 10 -B 2 "FAIL" logs/test_${COMMIT}.log > logs/test_errors_${COMMIT}.log || true

      # 🧪 Ejecutar End-to-End Tests y guardar logs
      - name: Run End-to-End Tests and Save Logs
        run: |
          COMMIT=${GITHUB_SHA::7}
          echo "COMMIT=$COMMIT" >> $GITHUB_ENV
          npm run test:e2e > logs/test_e2e_${COMMIT}.log 2>&1
          # Extraer solo errores E2E (opcional)
          grep -A 10 -B 2 "FAIL" logs/test_e2e_${COMMIT}.log > logs/test_e2e_errors_${COMMIT}.log || true

      # 🧾 Subir todos los logs como artefacto
      - name: Upload Test Logs
        uses: actions/upload-artifact@v4
        with:
          name: test-logs-${{ env.COMMIT }}
          path: logs/

      # 🔍 Análisis de calidad del código con SonarCloud
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@v2.2.0
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          args: >
            -Dsonar.javascript.lcov.reportPaths=./coverage/lcov.info
            -Dsonar.organization=${{ secrets.SONAR_ORGANIZATION }}
            -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY }}

  informe-sonar:
    needs: ci
    runs-on: ubuntu-latest
    if: success()
    env:
      COMMIT: ${{ needs.ci.outputs.COMMIT }}
      EMAIL_USER: ${{ secrets.EMAIL_USER }}
      EMAIL_PASS: ${{ secrets.EMAIL_PASS }}
      GH_PAT: ${{ secrets.GH_PAT }}
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      OWNER: ${{ secrets.OWNER }}
      REPO: ${{ secrets.REPO }}
      SONAR_PROJECT_KEY: ${{ secrets.SONAR_PROJECT_KEY }}
      GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Download Test Logs Artifact
        uses: actions/download-artifact@v4
        with:
          name: test-logs-${{ env.COMMIT }}
          path: logs/

      # 🔹 Generar reporte y enviar correo con logs adjuntos
      - name: Run report and send email
        run: python scripts/report_commit.py

  deploy:
    name: Deploy to Railway
    needs: informe-sonar
    runs-on: ubuntu-latest
    if: success()
    container: ghcr.io/railwayapp/cli:latest
    env:
      SVC_ID: 3f54df2e-6432-406e-a6d1-3d7d78b99dff
      RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Deploy to Railway
        run: railway up --service=${{ env.SVC_ID }}

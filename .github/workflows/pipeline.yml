name: CI/CD Pipeline

on:
  push:
    branches:
      - dev/erik
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  ci:
    name: Build, Test, and Analyze with SonarCloud
    runs-on: ubuntu-latest
    outputs:
      COMMIT: ${{ steps.set_commit.outputs.commit }}
    env:
      DB_HOST: ${{ secrets.DB_HOST }}
      DB_PORT: ${{ secrets.DB_PORT }}
      DB_USER: ${{ secrets.DB_USER }}
      DB_PASS: ${{ secrets.DB_PASS }}
      DB_NAME: ${{ secrets.DB_NAME }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install Dependencies
        run: npm ci

      - name: Wait for PostgreSQL
        run: |
          for i in {1..10}; do
            nc -z $DB_HOST $DB_PORT && echo "Postgres is up" && break
            echo "Waiting for postgres..."
            sleep 3
          done


      - name: Set Commit SHA
        id: set_commit
        run: |
          COMMIT=${GITHUB_SHA::7}
          echo "Commit: $COMMIT"
          echo "commit=$COMMIT" >> $GITHUB_OUTPUT
          echo "COMMIT=$COMMIT" >> $GITHUB_ENV


      - name: Run Tests and Save Logs
        run: |
          mkdir -p logs

          # Unit tests con cobertura
          npm run test:cov 2>&1 | tee logs/test_cov_${COMMIT}.log
          npm test 2>&1 | tee logs/test_${COMMIT}.log

          # E2E tests
          npm run test:e2e 2>&1 | tee logs/test_e2e_${COMMIT}.log


      - name: Upload Test Logs
        uses: actions/upload-artifact@v4
        with:
          name: test-logs-${{ steps.set_commit.outputs.commit }}
          path: logs/

      # üîç SonarCloud Scan
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@v2.2.0
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          args: >
            -Dsonar.javascript.lcov.reportPaths=./coverage/lcov.info
            -Dsonar.organization=${{ secrets.SONAR_ORGANIZATION }}
            -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY }}
            
      - name: Send Test Logs via Email
        if: always()
        run: python scripts/send_logs.py
        env:
          COMMIT: ${{ steps.set_commit.outputs.commit }}
          EMAIL_USER: ${{ secrets.EMAIL_USER }}
          EMAIL_PASS: ${{ secrets.EMAIL_PASS }}

  risk-analysis:
    name: Generate Sonar Report (Python)
    needs: ci
    runs-on: ubuntu-latest
    if: success()
    env:
      GITHUB_REF_NAME: ${{ github.ref_name }}
      EMAIL_USER: ${{ secrets.EMAIL_USER }}
      EMAIL_PASS: ${{ secrets.EMAIL_PASS }}
      GH_PAT: ${{ secrets.GH_PAT }}
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      OWNER: ${{ secrets.OWNER }}
      REPO: ${{ secrets.REPO }}
      SONAR_PROJECT_KEY: ${{ secrets.SONAR_PROJECT_KEY }}
      GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Run report generation
        run: python scripts/risk_pipeline.py
      
      - name: Subir deuda_tecnica_informe.txt como artefacto
        uses: actions/upload-artifact@v4
        with:
          name: deuda-tecnica
          path: deuda_tecnica_informe.txt

  sonar-prioritization:
    runs-on: ubuntu-latest
    needs: risk-analysis  
    steps:
      - name: Checkout del repositorio
        uses: actions/checkout@v4

      - name: Configurar Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Descargar artefacto deuda_tecnica_informe.txt
        uses: actions/download-artifact@v4
        with:
          name: deuda-tecnica
          path: .

      - name: Verificar archivo descargado
        run: |
          ls -lh deuda_tecnica_informe.txt
          head -n 20 deuda_tecnica_informe.txt

      - name: Instalar dependencias necesarias
        run: pip install requests

      - name: Ejecutar an√°lisis de priorizaci√≥n cr√≠tica
        env:
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
        run: python sonar_priorizacion.py


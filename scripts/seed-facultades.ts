import { NestFactory } from '@nestjs/core';
import { AppModule } from '../src/app.module';
import { FacultadesService } from '../src/facultades/facultades.service';
import { CreateFacultadDto } from '../src/facultades/dto/create-facultad.dto';

async function seedFacultades() {
  const app = await NestFactory.createApplicationContext(AppModule);
  const facultadesService = app.get(FacultadesService);

  const facultadesEjemplo: CreateFacultadDto[] = [
    {
      codigo: 'FIEEC',
      nombre: 'Facultad de Ingenier√≠a El√©ctrica y Electr√≥nica',
      descripcion: 'Facultad enfocada en la formaci√≥n de ingenieros el√©ctricos y electr√≥nicos, telecomunicaciones, control y sistemas de potencia.',
      estadoActivo: true,
    },
    {
      codigo: 'FIS',
      nombre: 'Facultad de Ingenier√≠a de Sistemas',
      descripcion: 'Facultad especializada en la formaci√≥n de ingenieros en sistemas computacionales, inform√°tica y tecnolog√≠as de la informaci√≥n.',
      estadoActivo: true,
    },
    {
      codigo: 'FIC',
      nombre: 'Facultad de Ingenier√≠a Civil y Ambiental',
      descripcion: 'Facultad dedicada a la formaci√≥n de ingenieros civiles y ambientales, con enfoque en infraestructura sostenible.',
      estadoActivo: true,
    },
    {
      codigo: 'FIM',
      nombre: 'Facultad de Ingenier√≠a Mec√°nica',
      descripcion: 'Facultad especializada en ingenier√≠a mec√°nica, mecatr√≥nica, procesos industriales y energ√≠as renovables.',
      estadoActivo: true,
    },
    {
      codigo: 'FIQ',
      nombre: 'Facultad de Ingenier√≠a Qu√≠mica y Agroindustria',
      descripcion: 'Facultad dedicada a la ingenier√≠a qu√≠mica, de alimentos, biotecnolog√≠a y procesos agroindustriales.',
      estadoActivo: true,
    },
    {
      codigo: 'FIGEMPA',
      nombre: 'Facultad de Ingenier√≠a en Geolog√≠a y Petr√≥leos',
      descripcion: 'Facultad especializada en ingenier√≠a geol√≥gica, de petr√≥leos, minas y recursos naturales.',
      estadoActivo: true,
    },
    {
      codigo: 'FCH',
      nombre: 'Facultad de Ciencias Humanas y Sociales',
      descripcion: 'Facultad enfocada en ciencias humanas, sociales, educaci√≥n y desarrollo comunitario.',
      estadoActivo: true,
    },
    {
      codigo: 'FCE',
      nombre: 'Facultad de Ciencias Exactas y Naturales',
      descripcion: 'Facultad dedicada a las ciencias exactas, naturales, matem√°ticas y estad√≠stica aplicada.',
      estadoActivo: true,
    },
    {
      codigo: 'FAR',
      nombre: 'Facultad de Arquitectura y Urbanismo',
      descripcion: 'Facultad especializada en arquitectura, urbanismo, dise√±o y planificaci√≥n territorial.',
      estadoActivo: true,
    },
    {
      codigo: 'FCA',
      nombre: 'Facultad de Ciencias Administrativas',
      descripcion: 'Facultad enfocada en administraci√≥n de empresas, econom√≠a, finanzas y gesti√≥n organizacional.',
      estadoActivo: true,
    },
    {
      codigo: 'ESFOT',
      nombre: 'Escuela de Formaci√≥n de Tecn√≥logos',
      descripcion: 'Escuela especializada en la formaci√≥n de tecn√≥logos en diversas √°reas t√©cnicas y tecnol√≥gicas.',
      estadoActivo: true,
    },
    {
      codigo: 'DGIP',
      nombre: 'Direcci√≥n General de Investigaci√≥n y Posgrado',
      descripcion: 'Unidad acad√©mica encargada de coordinar programas de posgrado e investigaci√≥n institucional.',
      estadoActivo: true,
    },
  ];

  try {
    console.log('üè´ Iniciando seeding de facultades...');
    
    for (const facultadData of facultadesEjemplo) {
      try {
        // Verificar si ya existe
        const existingFacultad = await facultadesService.findByCode(facultadData.codigo);
        
        if (existingFacultad) {
          console.log(`‚ö†Ô∏è  Facultad ${facultadData.codigo} ya existe - ${facultadData.nombre}`);
          continue;
        }

        await facultadesService.create(facultadData);
        console.log(`‚úÖ Facultad creada: ${facultadData.codigo} - ${facultadData.nombre}`);
        
      } catch (error) {
        console.error(`‚ùå Error al crear facultad ${facultadData.codigo}:`, error.message);
      }
    }
    
    console.log('üéâ Seeding de facultades completado');
    
  } catch (error) {
    console.error('‚ùå Error general en el seeding:', error.message);
  } finally {
    await app.close();
  }
}

seedFacultades();